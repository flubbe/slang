name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CONAN_PRESET_NAME: conan-release
    
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Get Conan
      uses: turtlebrowser/get-conan@v1.0
      
    - name: Create default profile
      run: conan profile detect
            
    - name: Install dependencies
      run: conan install . --build=missing

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake --preset ${{env.CONAN_PRESET_NAME}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --preset ${{env.CONAN_PRESET_NAME}}

    - name: Build std
      run: |
        cd ${{github.workspace}}
        ./build/${{env.BUILD_TYPE}}/slang compile src/lang/std -o lang/std

    - name: Run tests
      run: |
        cd ${{github.workspace}}
        ./build/${{env.BUILD_TYPE}}/test/test_vector
        ./build/${{env.BUILD_TYPE}}/test/test_package
        ./build/${{env.BUILD_TYPE}}/test/test_lexer
        ./build/${{env.BUILD_TYPE}}/test/test_parser
        ./build/${{env.BUILD_TYPE}}/test/test_codegen
        ./build/${{env.BUILD_TYPE}}/test/test_compile_ir
        ./build/${{env.BUILD_TYPE}}/test/test_type_system
        ./build/${{env.BUILD_TYPE}}/test/test_filemanager
        ./build/${{env.BUILD_TYPE}}/test/test_serialization
        ./build/${{env.BUILD_TYPE}}/test/test_output
        ./build/${{env.BUILD_TYPE}}/test/test_resolve
        ./build/${{env.BUILD_TYPE}}/test/test_interpreter

    - name: Clean up
      run: |
        cd ${{github.workspace}}
        rm *.cmod
        rm *.bin
    
    - name: Run command line tests
      run: |
        ./build/${{env.BUILD_TYPE}}/slang compile examples/hello_world
        ./build/${{env.BUILD_TYPE}}/slang exec examples/hello_world
        ./build/${{env.BUILD_TYPE}}/slang compile examples/array_loop
        ./build/${{env.BUILD_TYPE}}/slang exec examples/array_loop
        ./build/${{env.BUILD_TYPE}}/slang compile examples/structs
        ./build/${{env.BUILD_TYPE}}/slang exec examples/structs
        ./build/${{env.BUILD_TYPE}}/slang compile examples/linked_list
        ./build/${{env.BUILD_TYPE}}/slang exec examples/linked_list
        ./build/${{env.BUILD_TYPE}}/slang compile examples/print_args
        ./build/${{env.BUILD_TYPE}}/slang exec examples/print_args Hello World
        ./build/${{env.BUILD_TYPE}}/slang compile examples/string_conversion
        ./build/${{env.BUILD_TYPE}}/slang exec examples/string_conversion 3.141 a -1
        ./build/${{env.BUILD_TYPE}}/slang compile examples/assert
        ! ./build/${{env.BUILD_TYPE}}/slang exec examples/assert
        